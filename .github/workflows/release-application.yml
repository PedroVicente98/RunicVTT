name: Build & Release (Windows)

on:
  push:
    tags: ['v*']                # e.g. v1.2.3

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      BUILD_TYPE: Release

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Optional: NSIS for installer. If missing, CPack still makes ZIP.
      - name: Install NSIS
        shell: pwsh
        run: choco install nsis -y

      - name: Configure (preset or manual)
        run: cmake --preset dist
        # If you don't use presets, do:
        # run: cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build --preset build-dist --target ALL_BUILD --config Release --parallel
        # If no preset:
        # run: cmake --build build --config Release --parallel

      - name: CPack (ZIP/NSIS)
        shell: pwsh
        run: |
          # Make sure your CMakeLists sets:
          #   set(CPACK_PACKAGE_DIRECTORY "${{ github.workspace }}/dist")
          New-Item -ItemType Directory -Path dist -ErrorAction SilentlyContinue | Out-Null
          cmake --build --preset build-dist --target package --config Release
          # If no preset:
          # cmake --build build --config Release --target package
          Write-Host "Packages produced:"
          Get-ChildItem -Recurse -File dist | ForEach-Object { $_.FullName }

      - name: Upload packages as artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: dist/*

  release:
    runs-on: ubuntu-latest
    needs: build-windows

    steps:
      - name: Download packaged artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-assets
          path: to-release

      # Use softprops to create/update the release and upload assets
      - name: Create/Update GitHub Release (auto notes) and upload assets
        uses: softprops/action-gh-release@v2
        with:
          # For tag pushes, action reads the tag from the ref automatically.
          # For manual runs, uncomment these two lines:
          # tag_name: ${{ github.event.inputs.version }}
          # target_commitish: ${{ github.event.inputs.target }}
          generate_release_notes: true
          files: |
            to-release/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
