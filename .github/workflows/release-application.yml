name: Build & Package (Windows)

on:
  push:
    tags: ['v*']                 # e.g. v1.2.3

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      BUILD_TYPE: Release
      GENERATOR: Visual Studio 17 2022
      ARCH: x64

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Optional: NSIS for .exe installer (CPack still makes ZIP if NSIS missing)
      - name: Install NSIS
        run: choco install nsis -y
        shell: pwsh

      - name: CMake Configure
        run: cmake -S . -B build -G "${{ env.GENERATOR }}" -A ${{ env.ARCH }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: CMake Build
        run: cmake --build build --config ${{ env.BUILD_TYPE }} --parallel

      - name: Run CPack (ZIP + NSIS)
        shell: pwsh
        run: |
          # Ensure dist/ exists; CPack writes there because CPACK_PACKAGE_DIRECTORY is set in CMakeLists
          New-Item -ItemType Directory -Path dist -ErrorAction SilentlyContinue | Out-Null
          # Run the package target (multi-config generators need --config)
          cmake --build build --config ${{ env.BUILD_TYPE }} --target package
          Write-Host "Produced packages:"
          Get-ChildItem -Recurse -File dist | ForEach-Object { Write-Host " - $($_.FullName)" }

      - name: Upload artifacts (packages)
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: dist/*

  release:
    runs-on: ubuntu-latest
    needs: build-windows

    steps:
      - name: Download packaged artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-assets
          path: to-release

      # Use softprops to create/update the release and upload assets
      - name: Create/Update GitHub Release (auto notes) and upload assets
        uses: softprops/action-gh-release@v2
        with:
          # For tag pushes, action reads the tag from the ref automatically.
          # For manual runs, uncomment these two lines:
          # tag_name: ${{ github.event.inputs.version }}
          # target_commitish: ${{ github.event.inputs.target }}
          generate_release_notes: true
          files: |
            to-release/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
